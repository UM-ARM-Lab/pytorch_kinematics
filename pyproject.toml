[project]
name = "pytorch_kinematics"
version = "0.6.0"
description = "Robot kinematics implemented in pytorch"
readme = "README.md" # Optional

# Specify which Python versions you support. In contrast to the
# 'Programming Language' classifiers above, 'pip install' will check this
# and refuse to install the project if the version does not match. See
# https://packaging.python.org/guides/distributing-packages-using-setuptools/#python-requires
requires-python = ">=3.6"

# This is either text indicating the license for the distribution, or a file
# that contains the license
# https://packaging.python.org/en/latest/specifications/core-metadata/#license
license = { file = "LICENSE.txt" }

# This field adds keywords for your project which will appear on the
# project page. What does your project relate to?
#
# Note that this is a list of additional keywords, separated
# by commas, to be used to assist searching for the distribution in a
# larger catalog.
keywords = ["kinematics", "pytorch", "ik", "fk", "robotics"]  # Optional
authors = [
    { name = "Sheng Zhong", email = "zhsh@umich.edu" } # Optional
]
maintainers = [
    { name = "Sheng Zhong", email = "zhsh@umich.edu" } # Optional
]

# Classifiers help users find your project by categorizing it.
# For a list of valid classifiers, see https://pypi.org/classifiers/
classifiers = [# Optional
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
]

dependencies = [
    'absl-py',
    'lxml',
    'numpy',
    'pyyaml',
    'torch',
    'transformations',
]

[project.optional-dependencies]
test = ["pytest", "mujoco"]
mujoco = ["mujoco"]

[project.urls]
"Homepage" = "https://github.com/UM-ARM-Lab/pytorch_kinematics"
"Bug Reports" = "https://github.com/UM-ARM-Lab/pytorch_kinematics/issues"
"Source" = "https://github.com/UM-ARM-Lab/pytorch_kinematics"

# The following would provide a command line executable called `sample`
# which executes the function `main` from this package when invoked.
#[project.scripts]  # Optional
#sample = "sample:main"

# This is configuration specific to the `setuptools` build backend.
# If you are using a different build backend, you will need to change this.
[tool.setuptools]
# If there are data files included in your packages that need to be
# installed, specify them here.

[build-system]
# Including torch and ninja here are needed to build the native code.
# They will be installed as dependencies during the build, which can take a while the first time.
requires = ["setuptools>=60.0.0", "wheel"]
build-backend= "setuptools.build_meta"
